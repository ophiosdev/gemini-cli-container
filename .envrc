# code: language=shellscript insertSpaces=true tabSize=2
# shellcheck disable=SC2148

dotenv_if_exists

if test -z "${PYTHON_VERSION:-}" && test -f "${PWD}/.python-version"; then
  PYTHON_VERSION=$(head -n 1 "${PWD}/.python-version")
fi

if test -z "${PYTHON_VERSION:-}"; then
  PYTHON_VERSION=$(semver_search /usr/lib python 3)
fi

if test -z  "${PYTHON_VERSION:-}"; then
  echo "-> No Python version found. Please create a .python-version file or set PYTHON_VERSION in your environment." >&2
  exit 1
fi

export VIRTUAL_ENV="${PWD}/.venv"
layout python "python${PYTHON_VERSION}"

echo '*' > "${PWD}/.venv/.gitignore"

if ! test -f "${PWD}/.venv/.pip-updated"; then
  pip install --upgrade pip
  touch "${PWD}/.venv/.pip-updated"
fi

if test -z "${PYTHON_NO_INSTALL_REQUIREMENTS:-}"; then
  all_req_files=("${PWD}"/requirements*.txt)
  if [[ ${#all_req_files[@]} -gt 0 ]]; then

    install_needed=0

    for req_file in "${all_req_files[@]}"; do
      watch_file "$req_file"

      venv_file="${PWD}/.venv/.$(basename "$req_file")"
      if ! test -f "$venv_file" || test "$venv_file" -ot "$req_file"; then
        install_needed=1
      fi
    done

    if [[ "$install_needed" -eq 1 ]]; then
      pip_install_args=()
      for req_file in "${all_req_files[@]}"; do
          pip_install_args+=("-r" "$req_file")
      done

      if pip install -U "${pip_install_args[@]}"; then
        for req_file in "${all_req_files[@]}"; do
          venv_file="${PWD}/.venv/.$(basename "$req_file")"
          touch "$venv_file"
        done
      else
        echo "-> pip install command failed. Tracking files remain untouched." >&2
        exit 1
      fi
    fi
  fi
fi

if  test -f "${PWD}/.pre-commit-config.yaml" && ! test -f "${PWD}/.venv/.pre-commit-installed"; then
  if test -z "$(pip list 2>/dev/null | grep -oE 'pre[-_]commit')"; then
    pip install pre-commit
  fi
  pre-commit install
  touch "${PWD}/.venv/.pre-commit-installed"
fi
